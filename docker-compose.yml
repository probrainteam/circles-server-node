version: '3.8'
services:
  node-dev:
    build:
      context: ./
      target: dev # 도커파일 내 base dev를 build
    volumes:
      - .:/src
    command: yarn dev
    ports:
      - "${DOMAIN_PORT}:13000"
    environment:
      DEBUG: nodejs-docker-express:*
    env_file: .env
    depends_on:
      - dev_db
      - redis
      - logger-db
  node:
    build:
      context: ./
      target: dev # 도커파일 내 base dev를 build
    volumes:
      - .:/src
    command: yarn start
    ports:
      - "3000:3000"
    environment:
      DEBUG: nodejs-docker-express:*
    env_file: .env
  db: 
    image: mysql:5.7 
    restart: always
    command: --lower_case_table_names=1
    container_name: Probrain_db
    volumes:
      - /Users/Shared/data/Probrain_db:/var/lib/mysql
    # volumes:
    #   - ./db/conf.d:/etc/mysql/conf.d
    #   - ./db/data:/var/lib/mysql
    #   - ./db/initdb.d:/docker-entrypoint-initdb.d
  dev_db: 
    image: mysql:5.7 
    restart: always
    container_name: dev_db
    command: # 명령어 실행
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --lower_case_table_names=1
    env_file: .env
  redis:
      image: redis:alpine
      container_name: Probrain_redis
      hostname: redis_boot
      env_file: .env
      labels:
        - "name=redis"
        - "mode=standalone"

  logger-db:
      image: mongo
      restart: always
      container_name: logger-db
      env_file: .env
      volumes:
        - ./.docker/logger-db/initdb.d/create-app-user.sh:/docker-entrypoint-initdb.d/create-app-user.sh