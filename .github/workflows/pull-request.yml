name: "Pull request"
on:
  push:
    branches:
      - "!master"
      # - '*'         # matches every branch that doesn't contain a '/'
      # - '*/*'       # matches every branch containing a single '/'
      # - '**'        # matches every branch
      # - '!master'   # excludes master
  pull_request:
    branches:
      - "!master"

jobs:
  docker:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      # 해당 저장소의 코드를 가져옵니다.
      - name: Checkout
        uses: actions/checkout@v2

      # docker-compose를 활용해 테스트를 위한 컨테이너 환경을 구성합니다.
      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d --build

      # Node 16 버전을 사용합니다.
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "npm"

      # yarn을 설치합니다.
      - name: Install Yarn
        run: npm install yarn

      # 설치된 yarn을 통해 패키지를 설치합니다.
      - name: Install dependencies
        run: yarn install

      # 빌드를 수행합니다.
      - name: Run build
        run: yarn build

      # Build 파일을 기반으로 development env를 사용하여 실행합니다.
      - name: Run pull-request, using build files with development env
        run: yarn pull-request

      # 앞의 작업이 실패/성공과 관계 없이 컨테이너들을 종료합니다.
      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
